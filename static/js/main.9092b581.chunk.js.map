{"version":3,"sources":["axios.js","Row.js","requests.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","alt","name","API_KEY","requests","fetchTrending","fetchTopRated","fetchNetflixOriginals","fetchActionMovies","fetchComedyMovies","fetchDocumentaries","fetchRomanceMovies","fetchHorrorMovies","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAQeA,E,OANEC,EAAMC,OAAO,CAC1BC,QAAS,iC,eC8BEC,MA3Bf,YAAkC,IAApBC,EAAmB,EAAnBA,MAAQC,EAAW,EAAXA,SAClB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAaA,OAXAC,qBAAW,WAAK,4CACZ,4BAAAC,EAAA,sEAC2BV,EAAMW,IAAIN,GADrC,cACUO,EADV,OAGIJ,EAAUI,EAAQC,KAAKC,SAH3B,kBAIWF,GAJX,4CADY,uBAAC,WAAD,wBAOZG,KACD,CAACV,IAIA,sBAAKW,UAAU,MAAf,UACI,6BAAKZ,IACL,qBAAKY,UAAU,eAAf,SACST,EAAOU,KAAI,SAACC,GAAD,OACZ,qBAAKF,UAAU,cAAcG,IAAG,UArBnC,wCAqBmC,OAAgBD,EAAME,aAAeC,IAAKH,EAAMI,gBCzB9FC,G,MAAU,oCAiBDC,EAdE,CACbC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,cAAc,4BAAD,OAA8BH,EAA9B,mBACbI,sBAAsB,wBAAD,OAA0BJ,EAA1B,8CACrBK,kBAAkB,2BAAD,OAA6BL,EAA7B,2CAEjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,2CACjBO,mBAAmB,2BAAD,OAA6BP,EAA7B,4CAClBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,+CAClBS,kBAAkB,2BAAD,OAA6BT,EAA7B,4CCQNU,MAff,WACI,OAAS,sBAAKjB,UAAY,MAAjB,UACD,+CACC,cAAC,EAAD,CAAKZ,MAAM,eAAeC,SAAUmB,EAASC,gBAC7C,cAAC,EAAD,CAAKrB,MAAM,YAAYC,SAAUmB,EAASE,gBAC1C,cAAC,EAAD,CAAKtB,MAAM,oBAAoBC,SAAUmB,EAASG,wBAClD,cAAC,EAAD,CAAKvB,MAAM,gBAAgBC,SAAUmB,EAASI,oBAC9C,cAAC,EAAD,CAAKxB,MAAM,gBAAgBC,SAAUmB,EAASK,oBAC9C,cAAC,EAAD,CAAKzB,MAAM,gBAAgBC,SAAUmB,EAASM,qBAC9C,cAAC,EAAD,CAAK1B,MAAM,iBAAiBC,SAAUmB,EAASO,qBAChD,cAAC,EAAD,CAAK3B,MAAM,gBAAgBC,SAAUmB,EAASQ,wBCH3CE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9092b581.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n//instance.get('/foo-bar');\r\n//https://api/themoviedb.org/3/foo-bar\r\n\r\nexport default instance;","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({title,  fetchUrl}) {\r\n    const [movies, setMovies] = useState([]);\r\n    \r\n    useEffect (()=> {\r\n        async function fetchData(){\r\n            const request =  await axios.get(fetchUrl);\r\n          //  console.log(request);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n    \r\n  //  console.log(movies);\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row__posters\">\r\n                    {movies.map((movie)=> (\r\n                    <img className=\"row__poster\" src={`${base_url}${movie.poster_path}`} alt={movie.name} />\r\n            ))}\r\n            </div>\r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"feb0a933b10a99bd61842a37d63a0f90\";\r\n\r\n//https://api.themoviedb.org/3/discover/movie?api_key=feb0a933b10a99bd61842a37d63a0f90&with_genres=28&sort_by=popularity.desc\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213&sort_by=popularity.desc`, //\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28&sort_by=popularity.desc`,\r\n\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35&sort_by=popularity.desc`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99&sort_by=popularity.desc `,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749&sort_by=popularity.desc `,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27&sort_by=popularity.desc`\r\n}\r\n\r\n\r\n\r\nexport default requests;","import Row from './Row';\nimport './App.css';\nimport React from 'react';\nimport requests from './requests';\n\nfunction App() {\n    return ( <div className = \"App\" >\n            <h1>Netflix Clone</h1>\n             <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n             <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n             <Row title=\"Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals}/>\n             <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n             <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n             <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n             <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n            <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>                                     \n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}